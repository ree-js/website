/* esm.sh - esbuild bundle(estree-walker@3.0.3) node production */
var n=class{constructor(){this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.context={skip:()=>this.should_skip=!0,remove:()=>this.should_remove=!0,replace:e=>this.replacement=e}}replace(e,s,t,r){e&&s&&(t!=null?e[s][t]=r:e[s]=r)}remove(e,s,t){e&&s&&(t!=null?e[s].splice(t,1):delete e[s])}};var m=class extends n{constructor(e,s){super(),this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.context={skip:()=>this.should_skip=!0,remove:()=>this.should_remove=!0,replace:t=>this.replacement=t},this.enter=e,this.leave=s}visit(e,s,t,r){if(e){if(this.enter){let i=this.should_skip,o=this.should_remove,l=this.replacement;this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.enter.call(this.context,e,s,t,r),this.replacement&&(e=this.replacement,this.replace(s,t,r,e)),this.should_remove&&this.remove(s,t,r);let u=this.should_skip,f=this.should_remove;if(this.should_skip=i,this.should_remove=o,this.replacement=l,u)return e;if(f)return null}let c;for(c in e){let i=e[c];if(i&&typeof i=="object")if(Array.isArray(i)){let o=i;for(let l=0;l<o.length;l+=1){let u=o[l];_(u)&&(this.visit(u,e,c,l)||l--)}}else _(i)&&this.visit(i,e,c,null)}if(this.leave){let i=this.replacement,o=this.should_remove;this.replacement=null,this.should_remove=!1,this.leave.call(this.context,e,s,t,r),this.replacement&&(e=this.replacement,this.replace(s,t,r,e)),this.should_remove&&this.remove(s,t,r);let l=this.should_remove;if(this.replacement=i,this.should_remove=o,l)return null}}return e}};function _(h){return h!==null&&typeof h=="object"&&"type"in h&&typeof h.type=="string"}var a=class extends n{constructor(e,s){super(),this.should_skip=!1,this.should_remove=!1,this.replacement=null,this.context={skip:()=>this.should_skip=!0,remove:()=>this.should_remove=!0,replace:t=>this.replacement=t},this.enter=e,this.leave=s}async visit(e,s,t,r){if(e){if(this.enter){let i=this.should_skip,o=this.should_remove,l=this.replacement;this.should_skip=!1,this.should_remove=!1,this.replacement=null,await this.enter.call(this.context,e,s,t,r),this.replacement&&(e=this.replacement,this.replace(s,t,r,e)),this.should_remove&&this.remove(s,t,r);let u=this.should_skip,f=this.should_remove;if(this.should_skip=i,this.should_remove=o,this.replacement=l,u)return e;if(f)return null}let c;for(c in e){let i=e[c];if(i&&typeof i=="object")if(Array.isArray(i)){let o=i;for(let l=0;l<o.length;l+=1){let u=o[l];v(u)&&(await this.visit(u,e,c,l)||l--)}}else v(i)&&await this.visit(i,e,c,null)}if(this.leave){let i=this.replacement,o=this.should_remove;this.replacement=null,this.should_remove=!1,await this.leave.call(this.context,e,s,t,r),this.replacement&&(e=this.replacement,this.replace(s,t,r,e)),this.should_remove&&this.remove(s,t,r);let l=this.should_remove;if(this.replacement=i,this.should_remove=o,l)return null}}return e}};function v(h){return h!==null&&typeof h=="object"&&"type"in h&&typeof h.type=="string"}function j(h,{enter:e,leave:s}){return new m(e,s).visit(h,null)}async function A(h,{enter:e,leave:s}){return await new a(e,s).visit(h,null)}export{A as asyncWalk,j as walk};
//# sourceMappingURL=estree-walker.mjs.map