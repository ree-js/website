/* esm.sh - esbuild bundle(mdast-util-find-and-replace@2.2.2) node production */
import j from"./bef8e2.js";import{visitParents as k}from"./7e2208.js";import{convert as P}from"./d78843.js";var I={}.hasOwnProperty,F=function(e,l,t,b){let c,h;typeof l=="string"||l instanceof RegExp?(h=[[l,t]],c=b):(h=l,c=t),c||(c={});let E=P(c.ignore||[]),x=T(h),g=-1;for(;++g<x.length;)k(e,"text",m);return e;function m(n,o){let u=-1,i;for(;++u<o.length;){let p=o[u];if(E(p,i?i.children.indexOf(p):void 0,i))return;i=p}if(i)return O(n,o)}function O(n,o){let u=o[o.length-1],i=x[g][0],p=x[g][1],a=0,d=u.children.indexOf(n),v=!1,s=[];i.lastIndex=0;let f=i.exec(n.value);for(;f;){let y=f.index,R={index:f.index,input:f.input,stack:[...o,n]},r=p(...f,R);if(typeof r=="string"&&(r=r.length>0?{type:"text",value:r}:void 0),r!==!1&&(a!==y&&s.push({type:"text",value:n.value.slice(a,y)}),Array.isArray(r)?s.push(...r):r&&s.push(r),a=y+f[0].length,v=!0),!i.global)break;f=i.exec(n.value)}return v?(a<n.value.length&&s.push({type:"text",value:n.value.slice(a)}),u.children.splice(d,1,...s)):s=[n],d+s.length}};function T(e){let l=[];if(typeof e!="object")throw new TypeError("Expected array or object as schema");if(Array.isArray(e)){let t=-1;for(;++t<e.length;)l.push([w(e[t][0]),A(e[t][1])])}else{let t;for(t in e)I.call(e,t)&&l.push([w(t),A(e[t])])}return l}function w(e){return typeof e=="string"?new RegExp(j(e),"g"):e}function A(e){return typeof e=="function"?e:()=>e}export{F as findAndReplace};
//# sourceMappingURL=mdast-util-find-and-replace.mjs.map