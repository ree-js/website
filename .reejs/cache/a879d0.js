/* esm.sh - esbuild bundle(micromark-extension-gfm-task-list-item@1.0.5) node production */
var h={enter:{taskListCheck(){this.tag('<input type="checkbox" disabled="" ')}},exit:{taskListCheck(){this.tag("/>")},taskListCheckValueChecked(){this.tag('checked="" ')}}};import{factorySpace as m}from"./5ebd4d.js";import{markdownLineEndingOrSpace as c,markdownLineEnding as L,markdownSpace as o}from"./e4af39.js";var C={tokenize:p},l={text:{[91]:C}};function p(e,r,i){let k=this;return n;function n(t){return k.previous!==null||!k._gfmTasklistFirstContentOfListItem?i(t):(e.enter("taskListCheck"),e.enter("taskListCheckMarker"),e.consume(t),e.exit("taskListCheckMarker"),a)}function a(t){return c(t)?(e.enter("taskListCheckValueUnchecked"),e.consume(t),e.exit("taskListCheckValueUnchecked"),s):t===88||t===120?(e.enter("taskListCheckValueChecked"),e.consume(t),e.exit("taskListCheckValueChecked"),s):i(t)}function s(t){return t===93?(e.enter("taskListCheckMarker"),e.consume(t),e.exit("taskListCheckMarker"),e.exit("taskListCheck"),u):i(t)}function u(t){return L(t)?r(t):o(t)?e.check({tokenize:x},r,i)(t):i(t)}}function x(e,r,i){return m(e,k,"whitespace");function k(n){return n===null?i(n):r(n)}}export{l as gfmTaskListItem,h as gfmTaskListItemHtml};
//# sourceMappingURL=micromark-extension-gfm-task-list-item.mjs.map