/* esm.sh - esbuild bundle(micromark-factory-mdx-expression@1.0.9) node production */
import{markdownLineEnding as E}from"./967460.js";import{eventsToAcorn as j}from"./12fee0.js";import{positionFromEstree as g}from"./3f18d8.js";import{VFileMessage as x}from"./e20bba.js";function O(n,d,m,i,a,o,t,l,r,y,b){let p=this,k=this.events.length+3,u=0,c,h;return U;function U(e){return n.enter(m),n.enter(i),n.consume(e),n.exit(i),c=p.now(),w}function w(e){if(e===null)throw h||new x("Unexpected end of file in expression, expected a corresponding closing brace for `{`",p.now(),"micromark-extension-mdx-expression:unexpected-eof");if(E(e))return n.enter("lineEnding"),n.consume(e),n.exit("lineEnding"),v;if(e===125&&u===0){let s=o?z.call(p,o,t,k,c,y||!1,r||!1):{type:"ok",estree:void 0};if(s.type==="ok"){n.enter(i),n.consume(e),n.exit(i);let S=n.exit(m);return l&&s.estree&&Object.assign(S,{estree:s.estree}),d}return h=s.message,n.enter(a),n.consume(e),f}return n.enter(a),f(e)}function f(e){return e===125&&u===0||e===null||E(e)?(n.exit(a),w(e)):(e===123&&!o?u+=1:e===125&&(u-=1),n.consume(e),f)}function v(e){let s=p.now();if(s.line!==c.line&&!b&&p.parser.lazy[s.line])throw new x("Unexpected end of file in expression, expected a corresponding closing brace for `{`",p.now(),"micromark-extension-mdx-expression:unexpected-eof");return w(e)}}function z(n,d,m,i,a,o){let t=j(this.events.slice(m),{acorn:n,acornOptions:d,start:i,expression:!0,allowEmpty:a,prefix:o?"({":"",suffix:o?"})":""}),l=t.estree;if(o&&l){let r=l.body[0];if(r.type!=="ExpressionStatement"||r.expression.type!=="ObjectExpression")throw new x("Unexpected `"+r.type+"` in code: expected an object spread (`{...spread}`)",g(r).start,"micromark-extension-mdx-expression:non-spread");if(r.expression.properties[1])throw new x("Unexpected extra content in spread: only a single spread is supported",g(r.expression.properties[1]).start,"micromark-extension-mdx-expression:spread-extra");if(r.expression.properties[0]&&r.expression.properties[0].type!=="SpreadElement")throw new x("Unexpected `"+r.expression.properties[0].type+"` in code: only spread elements are supported",g(r.expression.properties[0]).start,"micromark-extension-mdx-expression:non-spread")}return t.error?{type:"nok",message:new x("Could not parse expression with acorn: "+t.error.message,{line:t.error.loc.line,column:t.error.loc.column+1,offset:t.error.pos},"micromark-extension-mdx-expression:acorn")}:{type:"ok",estree:l}}export{O as factoryMdxExpression};
//# sourceMappingURL=micromark-factory-mdx-expression.mjs.map